class Solution {
public:
    void dfs(int n,int m,vector<vector<char>> &grid,int x,int y){
         grid[x][y]=2;
         vector<vector<int>>direction ={{-1,0},{1,0},{0,-1},{0,1}};
         for(int i=0;i<4;i++){
           int xx=x+direction[i][0];
           int yy=y+direction[i][1];
           if(xx>=0 && yy>=0 && xx<n && yy<m && grid[xx][yy]=='1'){
             dfs(n,m,grid,xx,yy);
           }

         }
      }
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        if(n==0){
            return 0;
        }
  int m=grid[0].size();
  int count=0;
  for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
         if(grid[i][j]=='1'){
           count++;
           dfs(n,m,grid,i,j);
         }
    }
  }
  return count;

    }
};
